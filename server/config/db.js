// db/database.js
import sqlite3 from 'sqlite3';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const dbPath = path.resolve(__dirname, '../db/database.sqlite');

// ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
const db = new sqlite3.Database(dbPath, (err) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:', err.message);
  } else {
    console.log('‚úÖ SQLite –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –ø–æ –ø—É—Ç–∏:', dbPath);
  }
});

// ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
const initDatabase = () => {
  db.serialize(() => {
    // –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫
    db.run(`
      CREATE TABLE IF NOT EXISTS applications (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        full_name TEXT NOT NULL,
        phone TEXT NOT NULL CHECK(length(phone) >= 10),
        service_type TEXT,
        message TEXT,
        created_at TEXT DEFAULT (datetime('now'))
      )
    `, (err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã applications:', err.message);
      } else {
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ applications –≥–æ—Ç–æ–≤–∞');
      }
    });

    // üëâ –î–æ–±–∞–≤–∏–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    db.run(`
      CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        email TEXT UNIQUE NOT NULL,
        password TEXT NOT NULL,
        name TEXT DEFAULT '–ë–µ–∑ –∏–º–µ–Ω–∏',
        created_at TEXT DEFAULT (datetime('now'))
      )
    `, (err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã users:', err.message);
      } else {
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –≥–æ—Ç–æ–≤–∞');
      }
    });
  });
};

// –í—ã–∑–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
initDatabase();

export default db;
