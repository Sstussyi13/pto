import nodemailer from "nodemailer";
import dotenv from "dotenv";
dotenv.config();

// –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç
const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.MAIL_USER,
    pass: process.env.MAIL_PASS,
  },
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ)
transporter.verify((error, success) => {
  if (error) {
    console.error("‚ùå SMTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:", error);
  } else {
    console.log("‚úÖ SMTP –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å–µ–º");
  }
});

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
export async function sendEmail({ full_name, phone, service_type = "–ù–µ —É–∫–∞–∑–∞–Ω–æ", message }) {
  const mailOptions = {
    from: `"–°–∞–π—Ç –ü–¢–û" <${process.env.MAIL_USER}>`,
    to: process.env.MAIL_RECEIVER,
    subject: "üî• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞",
    html: `
      <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</h2>
      <p><strong>–ò–º—è:</strong> ${full_name}</p>
      <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>
      <p><strong>–¢–∏–ø —É—Å–ª—É–≥–∏:</strong> ${service_type}</p>
      <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong><br>${message}</p>
    `,
  };

  console.log("üì® –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ...");
  try {
    const info = await transporter.sendMail(mailOptions);
    console.log("‚úÖ –ü–∏—Å—å–º–æ —É—à–ª–æ:", info.response);
    return info;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:", error);
    throw error;
  }
  
} 
// node mailer.js ‚Äî –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é
if (process.argv[1] === new URL(import.meta.url).pathname) {
  sendEmail({
    full_name: "–ò–º—è –¢–µ—Å—Ç–µ—Ä–∞",
    phone: "+7 900 000 00 00",
    message: "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Ä—É—á–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º",
  });
}

